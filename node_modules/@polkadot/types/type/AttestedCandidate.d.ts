import Enum from '../codec/Enum';
import Struct from '../codec/Struct';
import Tuple from '../codec/Tuple';
import Bytes from '../primitive/Bytes';
import Signature from './Signature';
export declare class CandidateSignature extends Signature {
}
declare const BalanceUpload_base: import("../types").Constructor<Tuple>;
export declare class BalanceUpload extends BalanceUpload_base {
}
declare const EgressQueueRoot_base: import("../types").Constructor<Tuple>;
export declare class EgressQueueRoot extends EgressQueueRoot_base {
}
export declare class HeadData extends Bytes {
}
export declare class CandidateReceipt extends Struct {
    constructor(value?: any);
}
declare const AvailabilityVote_base: import("../types").Constructor<Tuple>;
export declare class AvailabilityVote extends AvailabilityVote_base {
}
export declare class ExplicitCandidateSignature extends CandidateSignature {
}
export declare class ImplicitCandidateSignature extends CandidateSignature {
}
export declare class ValidityAttestation extends Enum {
    constructor(value?: any);
    /**
     * @description Returns the item as a [[ExplicitCandidateSignature]]
     */
    readonly asExplicitCandidateSignature: ExplicitCandidateSignature;
    /**
     * @description Returns the item as a [[ImplicitCandidateSignature]]
     */
    readonly asImplicitCandidateSignature: ImplicitCandidateSignature;
}
declare const ValidityVote_base: import("../types").Constructor<Tuple>;
export declare class ValidityVote extends ValidityVote_base {
}
/**
 * @name AttestedCandidate
 * @description
 *  An attested candidate
 */
export default class AttestedCandidate extends Struct {
    constructor(value?: any);
}
export {};
