"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _method = _interopRequireDefault(require("./create/method"));

var _param = _interopRequireDefault(require("./create/param"));

// Copyright 2017-2019 @polkadot/jsonrpc authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
const pendingExtrinsics = {
  description: 'Returns all pending extrinsics, potentially grouped by sender',
  params: [],
  type: 'PendingExtrinsics'
};
const submitExtrinsic = {
  isSigned: true,
  description: 'Submit a fully formatted extrinsic for block inclusion',
  params: [(0, _param.default)('extrinsic', 'Extrinsic')],
  type: 'Hash'
};
const submitAndWatchExtrinsic = {
  description: 'Subscribe and watch an extrinsic until unsubscribed',
  isSigned: true,
  params: [(0, _param.default)('extrinsic', 'Extrinsic')],
  pubsub: ['extrinsicUpdate', 'submitAndWatchExtrinsic', 'unwatchExtrinsic'],
  type: 'ExtrinsicStatus'
};
const section = 'author';
/**
 * @summary Methods to work with authors & contributors.
 */

var _default = {
  isDeprecated: false,
  isHidden: false,
  description: 'Authoring of network items',
  section,
  methods: {
    pendingExtrinsics: (0, _method.default)(section, 'pendingExtrinsics', pendingExtrinsics),
    submitExtrinsic: (0, _method.default)(section, 'submitExtrinsic', submitExtrinsic),
    submitAndWatchExtrinsic: (0, _method.default)(section, 'submitAndWatchExtrinsic', submitAndWatchExtrinsic)
  }
};
exports.default = _default;