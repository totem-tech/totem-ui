import { SubscriptionResult } from './types';
export declare type CombinatorCallback = (value: Array<any>) => any;
export declare type CombinatorFunction = {
    (cb: (value: any) => any): SubscriptionResult;
};
export default class Combinator {
    protected _allHasFired: boolean;
    protected _callback: CombinatorCallback;
    protected _fired: Array<boolean>;
    protected _fns: Array<CombinatorFunction>;
    protected _isActive: boolean;
    protected _results: Array<any>;
    protected _subscriptions: Array<SubscriptionResult>;
    constructor(fns: Array<CombinatorFunction | [CombinatorFunction, ...Array<any>]>, callback: CombinatorCallback);
    protected allHasFired(): boolean;
    protected createCallback(index: number): (value: any) => void;
    protected triggerUpdate(): void;
    unsubscribe(): void;
}
