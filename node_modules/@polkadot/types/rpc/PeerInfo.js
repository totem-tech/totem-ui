"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Struct = _interopRequireDefault(require("../codec/Struct"));

var _Text = _interopRequireDefault(require("../primitive/Text"));

var _U = _interopRequireDefault(require("../primitive/U32"));

var _Hash = _interopRequireDefault(require("../primitive/Hash"));

var _BlockNumber = _interopRequireDefault(require("../type/BlockNumber"));

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name PeerInfo
 * @description
 * A system peer info indicator, reported back over RPC
 */
class PeerInfo extends _Struct.default {
  constructor(value) {
    super({
      peerId: _Text.default,
      roles: _Text.default,
      protocolVersion: _U.default,
      bestHash: _Hash.default,
      bestNumber: _BlockNumber.default
    }, value);
  }
  /**
   * @description The best block hash for the peer
   */


  get bestHash() {
    return this.get('bestHash');
  }
  /**
   * @description The best block hash for the peer
   */


  get bestNumber() {
    return this.get('bestNumber');
  }
  /**
   * @description The p2p network id for the peer
   */


  get peerId() {
    return this.get('peerId');
  }
  /**
   * @description The index of the peer in our list
   */


  get protocolVersion() {
    return this.get('protocolVersion');
  }
  /**
   * @description The roles of the peer on the network
   */


  get roles() {
    return this.get('roles');
  }

}

exports.default = PeerInfo;