"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Struct = _interopRequireDefault(require("../codec/Struct"));

var _Balance = _interopRequireDefault(require("./Balance"));

var _BlockNumber = _interopRequireDefault(require("./BlockNumber"));

var _LockIdentifier = _interopRequireDefault(require("./LockIdentifier"));

var _WithdrawReasons = _interopRequireDefault(require("./WithdrawReasons"));

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name BalanceLock
 * @description
 * The Substrate BalanceLock for staking
 */
class BalanceLock extends _Struct.default {
  constructor(value) {
    super({
      id: _LockIdentifier.default,
      amount: _Balance.default,
      until: _BlockNumber.default,
      reasons: _WithdrawReasons.default
    }, value);
  }
  /**
   * @description The amount
   */


  get amount() {
    return this.get('amount');
  }
  /**
   * @description The lock id
   */


  get id() {
    return this.get('id');
  }
  /**
   * @description The reasons
   */


  get reasons() {
    return this.get('reasons');
  }
  /**
   * @description Until when this is available
   */


  get until() {
    return this.get('until');
  }

}

exports.default = BalanceLock;