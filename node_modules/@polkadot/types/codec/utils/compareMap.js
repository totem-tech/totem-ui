"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = compareMap;

var _util = require("@polkadot/util");

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
// NOTE These are used internally and when comparing objects, expects that
// when the second is an Map<string, Codec> that the first has to be as well
function compareMap(a, b) {
  if (Array.isArray(b)) {
    return a.size === b.length && (0, _util.isUndefined)(b.find(entry => {
      if (!Array.isArray(entry) || entry.length !== 2) {
        return true;
      }

      const value = a.get(entry[0]);
      return (0, _util.isUndefined)(value) || ( // Codec has .eq, use it here
      (0, _util.isFunction)(value.eq) ? !value.eq(entry[1]) : value !== entry[1]);
    }));
  } else if (b instanceof Map) {
    return compareMap(a, [...b.entries()]);
  } else if ((0, _util.isObject)(b)) {
    return compareMap(a, Object.entries(b));
  }

  return false;
}