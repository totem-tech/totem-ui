import Struct from '../codec/Struct';
import Vector from '../codec/Vector';
import AccountId from '../primitive/AccountId';
import Balance from './Balance';
import UnlockChunk from './UnlockChunk';
/**
 * @name StakingLedger
 * @description
 * The ledger of a (bonded) stash
 */
export default class StakingLedger extends Struct {
    constructor(value?: any);
    /**
     * @description The total amount of the stash's balance that will be at stake in any forthcoming rounds
     */
    readonly active: Balance;
    /**
     * @description The stash account whose balance is actually locked and at stake
     */
    readonly stash: AccountId;
    /**
     * @description The total amount of the stash's balance that we are currently accounting for. It's just `active` plus all the `unlocking` balances
     */
    readonly total: Balance;
    /**
     * @description Any balance that is becoming free, which may eventually be transferred out of the stash (assuming it doesn't get slashed first)
     */
    readonly unlocking: Vector<UnlockChunk>;
}
