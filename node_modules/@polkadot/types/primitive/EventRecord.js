"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.EventRecord_0_76 = exports.Phase = exports.Finalization = exports.ApplyExtrinsic = void 0;

var _util = require("@polkadot/util");

var _Enum = _interopRequireDefault(require("../codec/Enum"));

var _Struct = _interopRequireDefault(require("../codec/Struct"));

var _Vector = _interopRequireDefault(require("../codec/Vector"));

var _Hash = _interopRequireDefault(require("./Hash"));

var _Event = _interopRequireDefault(require("./Event"));

var _Null = _interopRequireDefault(require("./Null"));

var _U = _interopRequireDefault(require("./U32"));

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name ApplyExtrinsic
 * @description
 * The [[Phase]] where the extrinsic is applied
 */
class ApplyExtrinsic extends _U.default {}
/**
 * @name Finalization
 * @description
 * The [[Phase]] where the extrinsic is being Finalized
 */


exports.ApplyExtrinsic = ApplyExtrinsic;

class Finalization extends _Null.default {}
/**
 * @name Phase
 * @description
 * An [[Enum]] that indicates the specific phase where the [[EventRecord]] was generated
 */


exports.Finalization = Finalization;

class Phase extends _Enum.default {
  constructor(value, index) {
    super({
      ApplyExtrinsic,
      Finalization
    }, value, index);
  }
  /**
   * @description Returns the item as a [[ApplyExtrinsic]]
   */


  get asApplyExtrinsic() {
    (0, _util.assert)(this.isApplyExtrinsic, "Cannot convert '".concat(this.type, "' via asApplyExtrinsic"));
    return this.value;
  }
  /**
   * @description Returns the item as a [[Finalization]]
   */


  get asFinalization() {
    (0, _util.assert)(this.isFinalization, "Cannot convert '".concat(this.type, "' via asFinalization"));
    return this.value;
  }
  /**
   * @description true when this is a ApplyExtrinsic
   */


  get isApplyExtrinsic() {
    return this.type === 'ApplyExtrinsic';
  }
  /**
   * @description true when this is a ApplyExtrinsic
   */


  get isFinalization() {
    return this.type === 'Finalization';
  }

}
/**
 * @name EventRecord_0_76
 * @description
 * A record for an [[Event]] (as specified by [[Metadata]]) with the specific [[Phase]] of
 * application.
 */
// tslint:disable-next-line


exports.Phase = Phase;

class EventRecord_0_76 extends _Struct.default {
  constructor(value) {
    super({
      phase: Phase,
      event: _Event.default
    }, value);
  }
  /**
   * @description The [[Event]] this record refers to
   */


  get event() {
    return this.get('event');
  }
  /**
   * @description The [[Phase]] where the event was generated
   */


  get phase() {
    return this.get('phase');
  }
  /**
   * @description The [[Hash]] topics for this event (empty, compat)
   */


  get topics() {
    return new (_Vector.default.with(_Hash.default))();
  }

}
/**
 * @name EventRecord
 * @description
 * A record for an [[Event]] (as specified by [[Metadata]]) with the specific [[Phase]] of
 * application.
 */


exports.EventRecord_0_76 = EventRecord_0_76;

class EventRecord extends _Struct.default {
  constructor(value) {
    super({
      phase: Phase,
      event: _Event.default,
      topics: _Vector.default.with(_Hash.default)
    }, value);
  }

  /**
   * @description The [[Event]] this record refers to
   */
  get event() {
    return this.get('event');
  }
  /**
   * @description The [[Phase]] where the event was generated
   */


  get phase() {
    return this.get('phase');
  }
  /**
   * @description The [[Hash]] topics for this event
   */


  get topics() {
    return this.get('topics');
  }

}

exports.default = EventRecord;
EventRecord.Fallback = EventRecord_0_76;