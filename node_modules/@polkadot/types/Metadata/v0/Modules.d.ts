import Option from '../../codec/Option';
import Struct from '../../codec/Struct';
import Vector from '../../codec/Vector';
import Text from '../../primitive/Text';
import Type from '../../primitive/Type';
import U16 from '../../primitive/U16';
import { StorageMetadata } from './Storage';
export declare class FunctionArgumentMetadata extends Struct {
    constructor(value?: any);
    /**
     * @description The argument name
     */
    readonly name: Text;
    /**
     * @description The [[Type]]
     */
    readonly type: Type;
}
export declare class FunctionMetadata extends Struct {
    constructor(value?: any);
    /**
     * @description The arguments of [[Type]]
     */
    readonly args: Vector<FunctionArgumentMetadata>;
    /**
     * @description The [[FunctionArgumentMetadata]] for arguments
     * @deprecated Use `.args` instead
     */
    readonly arguments: Vector<FunctionArgumentMetadata>;
    /**
     * @description The [[Text]] documentation
     */
    readonly documentation: Vector<Text>;
    /**
     * @description The [[Text]] documentation
     * @deprecated Use `.documentation` instead.
     */
    readonly docs: Vector<Text>;
    /**
     * @description The `[sectionIndex, methodIndex]` call id
     */
    readonly id: U16;
    /**
     * @description The call name
     */
    readonly name: Text;
}
export declare class CallMetadata extends Struct {
    constructor(value?: any);
    /**
     * @description The functions available as [[FunctionMetadata]]
     */
    readonly functions: Vector<FunctionMetadata>;
    /**
     * @description The section name
     */
    readonly name: Text;
}
export declare class ModuleMetadata extends Struct {
    constructor(value?: any);
    /**
     * @description The calls as [[FunctionMetadata]]
     */
    readonly call: CallMetadata;
    /**
     * @description The name
     */
    readonly name: Text;
}
export declare class RuntimeModuleMetadata extends Struct {
    constructor(value?: any);
    /**
     * @description The [[ModuleMetadata]]
     */
    readonly module: ModuleMetadata;
    /**
     * @description The prefix
     */
    readonly prefix: Text;
    /**
     * @description The optional [[StorageMetadata]]
     */
    readonly storage: Option<StorageMetadata>;
}
