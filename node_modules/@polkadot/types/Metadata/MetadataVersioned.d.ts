import Struct from '../codec/Struct';
import MagicNumber from './MagicNumber';
import MetadataV0 from './v0';
import MetadataV1 from './v1';
import MetadataV2 from './v2';
import MetadataV3 from './v3';
import MetadataV4 from './v4';
import MetadataV5 from './v5';
/**
 * @name MetadataVersioned
 * @description
 * The versioned runtime metadata as a decoded structure
 */
export default class MetadataVersioned extends Struct {
    private _convertedV1?;
    private _convertedV2?;
    private _convertedV3?;
    private _convertedV4?;
    private _convertedV5?;
    constructor(value?: any);
    /**
     * @description
     */
    readonly magicNumber: MagicNumber;
    /**
     * @description the metadata wrapped
     */
    private readonly metadata;
    /**
     * @description the metadata version this structure represents
     */
    readonly version: number;
    /**
     * @description Returns the wrapped metadata as a V0 object
     */
    readonly asV0: MetadataV0;
    /**
     * @description Returns the wrapped values as a V1 object
     */
    readonly asV1: MetadataV1;
    /**
     * @description Returns the wrapped values as a V2 object
     */
    readonly asV2: MetadataV2;
    /**
     * @description Returns the wrapped values as a V3 object
     */
    readonly asV3: MetadataV3;
    getUniqTypes(throwError: boolean): Array<string>;
    /**
     * @description Returns the wrapped values as a V4 object
     */
    readonly asV4: MetadataV4;
    /**
     * @description Returns the wrapped values as a V5 object
     */
    readonly asV5: MetadataV5;
}
