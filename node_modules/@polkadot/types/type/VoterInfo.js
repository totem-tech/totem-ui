"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Struct = _interopRequireDefault(require("../codec/Struct"));

var _Balance = _interopRequireDefault(require("./Balance"));

var _VoteIndex = _interopRequireDefault(require("./VoteIndex"));

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name VoterInfo
 * @description
 * The activity status of a voter.
 */
class VoterInfo extends _Struct.default {
  constructor(value) {
    super({
      lastActive: _VoteIndex.default,
      lastWin: _VoteIndex.default,
      pot: _Balance.default,
      stake: _Balance.default
    }, value);
  }
  /**
   * @description Last VoteIndex in which this voter assigned (or initialized) approvals.
   */


  get lastActive() {
    return this.get('lastActive');
  }
  /**
   * @description  Last VoteIndex in which one of this voter's approvals won.
   * Note that `last_win = N` indicates a last win at index `N-1`, hence `last_win = 0` means no win ever.
   */


  get lastWin() {
    return this.get('lastWin');
  }
  /**
   * @description The amount of stored weight as a result of not winning but changing approvals.
   */


  get pot() {
    return this.get('pot');
  }
  /**
   * @description Current staked amount. A lock equal to this value always exists.
   */


  get stake() {
    return this.get('stake');
  }

}

exports.default = VoterInfo;