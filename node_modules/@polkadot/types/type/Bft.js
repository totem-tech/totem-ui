"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BftHashSignature = exports.BftAuthoritySignature = void 0;

var _Tuple = _interopRequireDefault(require("../codec/Tuple"));

var _Hash = _interopRequireDefault(require("../primitive/Hash"));

var _AuthorityId = _interopRequireDefault(require("./AuthorityId"));

var _Signature = _interopRequireDefault(require("./Signature"));

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @name BftAuthoritySignature
 * @description
 * Represents a Bft Hash and Signature pairing, typically used in reporting
 * network behaviour.
 */
class BftAuthoritySignature extends _Tuple.default {
  constructor(value) {
    super({
      AuthorityId: _AuthorityId.default,
      Signature: _Signature.default
    }, value);
  }
  /**
   * @description The wrapped [[AuthoriyId]]
   */


  get authorityId() {
    return this[0];
  }
  /**
   * @description The wrapped [[Signature]] value
   */


  get signature() {
    return this[1];
  }

}

exports.BftAuthoritySignature = BftAuthoritySignature;

/**
 * @name BftHashSignature
 * @description
 * Represents a Bft Hash and Signature pairing, typically used in reporting
 * network behaviour.
 */
class BftHashSignature extends _Tuple.default {
  constructor(value) {
    super({
      Hash: _Hash.default,
      Signature: _Signature.default
    }, value);
  }
  /**
   * @description The wrapped [[Hash]]
   */


  get hash() {
    return this[0];
  }
  /**
   * @description The wrapped [[Signature]]
   */


  get signature() {
    return this[1];
  }

}

exports.BftHashSignature = BftHashSignature;