import Struct from '../../codec/Struct';
import Vector from '../../codec/Vector';
import Text from '../../primitive/Text';
import Type from '../../primitive/Type';
export declare class FunctionArgumentMetadata extends Struct {
    constructor(value?: any);
    /**
     * @description The argument name
     */
    readonly name: Text;
    /**
     * @description The [[Type]]
     */
    readonly type: Type;
}
/**
 * @name FunctionMetadata
 * @description
 * The definition of a call
 */
export declare class FunctionMetadata extends Struct {
    constructor(value?: any);
    /**
     * @description The [[FunctionArgumentMetadata]] for arguments
     */
    readonly args: Vector<FunctionArgumentMetadata>;
    /**
     * @description The [[Text]] documentation
     */
    readonly documentation: Vector<Text>;
    /**
     * @description The [[Text]] documentation
     * @deprecated Use `.documentation` instead.
     */
    readonly docs: Vector<Text>;
    /**
     * @description The call name
     */
    readonly name: Text;
}
