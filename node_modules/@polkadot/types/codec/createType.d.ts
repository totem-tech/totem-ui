import { Codec, Constructor } from '../types';
import Text from '../primitive/Text';
export declare enum TypeDefInfo {
    Compact = 0,
    DoubleMap = 1,
    Enum = 2,
    Linkage = 3,
    Option = 4,
    Plain = 5,
    Struct = 6,
    Tuple = 7,
    Vector = 8,
    VectorFixed = 9,
    Null = 10
}
export declare type TypeDefExtVecFixed = {
    length: number;
    type: string;
};
export declare type TypeDef = {
    info: TypeDefInfo;
    ext?: TypeDefExtVecFixed;
    name?: string;
    type: string;
    sub?: TypeDef | Array<TypeDef>;
};
export declare function typeSplit(type: string): Array<string>;
export declare function getTypeDef(_type: Text | string, name?: string): TypeDef;
export declare function getTypeClass(value: TypeDef): Constructor;
export declare function createClass(type: Text | string): Constructor;
export default function createType(type: Text | string, value?: any, isPedantic?: boolean): Codec;
