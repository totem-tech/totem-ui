"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OuterDispatchMetadata = exports.OuterDispatchCall = void 0;

var _Struct = _interopRequireDefault(require("../../codec/Struct"));

var _Vector = _interopRequireDefault(require("../../codec/Vector"));

var _Text = _interopRequireDefault(require("../../primitive/Text"));

var _U = _interopRequireDefault(require("../../primitive/U16"));

// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
class OuterDispatchCall extends _Struct.default {
  constructor(value) {
    super({
      name: _Text.default,
      prefix: _Text.default,
      index: _U.default
    }, value);
  }
  /**
   * @description The [[U16]] index for the call
   */


  get index() {
    return this.get('index');
  }
  /**
   * @description The name for the call
   */


  get name() {
    return this.get('name');
  }
  /**
   * @description The call prefix (or section)
   */


  get prefix() {
    return this.get('prefix');
  }

}

exports.OuterDispatchCall = OuterDispatchCall;

class OuterDispatchMetadata extends _Struct.default {
  constructor(value) {
    super({
      name: _Text.default,
      calls: _Vector.default.with(OuterDispatchCall)
    }, value);
  }
  /**
   * @description The [[OuterDispathCall]] wrapped
   */


  get calls() {
    return this.get('calls');
  }
  /**
   * @description The name for the dispatch
   */


  get name() {
    return this.get('name');
  }

}

exports.OuterDispatchMetadata = OuterDispatchMetadata;