"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = fromMetadata;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _util = require("@polkadot/util");

var _createFunction = _interopRequireDefault(require("./createFunction"));

var _storage = require("./storage");

// Copyright 2017-2019 @polkadot/storage authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * Extend a storage object with the storage modules & module functions present
 * in the metadata.
 *
 * @param storage - A storage object to be extended.
 * @param metadata - The metadata to extend the storage object against.
 */
function fromMetadata(metadata) {
  return metadata.asV5.modules.reduce((result, moduleMetadata) => {
    if (moduleMetadata.storage.isNone) {
      return result;
    }

    const prefix = moduleMetadata.prefix; // For access, we change the index names, i.e. Balances.FreeBalance -> balances.freeBalance

    result[(0, _util.stringLowerFirst)(prefix.toString())] = moduleMetadata.storage.unwrap().reduce((newModule, storageFnMeta) => {
      newModule[(0, _util.stringLowerFirst)(storageFnMeta.name.toString())] = (0, _createFunction.default)(prefix, storageFnMeta.name, storageFnMeta);
      return newModule;
    }, {});
    return result;
  }, (0, _objectSpread2.default)({}, _storage.storage));
}