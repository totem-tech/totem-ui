import { Codec } from '@polkadot/types/types';
import { QueryableStorageFunction as QueryableStorageFunctionBase, SubmittableExtrinsicFunction as SubmittableExtrinsicFunctionBase } from '../types';
import ApiBase from '../Base';
import { SubmittableExtrinsic as SubmittableExtrinsicBase } from '../SubmittableExtrinsic';
export declare type SubscriptionResult = Promise<() => any>;
export declare type CodecResult = Promise<Codec>;
export interface ApiPromiseInterface extends ApiBase<CodecResult, SubscriptionResult> {
    readonly isReady: Promise<ApiPromiseInterface>;
}
export declare type QueryableStorageFunction = QueryableStorageFunctionBase<CodecResult, SubscriptionResult>;
export declare type SubmittableExtrinsic = SubmittableExtrinsicBase<CodecResult, SubscriptionResult>;
export declare type SubmittableExtrinsicFunction = SubmittableExtrinsicFunctionBase<CodecResult, SubscriptionResult>;
