import Enum from '../codec/Enum';
import Struct from '../codec/Struct';
import Vector from '../codec/Vector';
import Hash from './Hash';
import Event from './Event';
import Null from './Null';
import U32 from './U32';
/**
 * @name ApplyExtrinsic
 * @description
 * The [[Phase]] where the extrinsic is applied
 */
export declare class ApplyExtrinsic extends U32 {
}
/**
 * @name Finalization
 * @description
 * The [[Phase]] where the extrinsic is being Finalized
 */
export declare class Finalization extends Null {
}
/**
 * @name Phase
 * @description
 * An [[Enum]] that indicates the specific phase where the [[EventRecord]] was generated
 */
export declare class Phase extends Enum {
    constructor(value: any, index?: number);
    /**
     * @description Returns the item as a [[ApplyExtrinsic]]
     */
    readonly asApplyExtrinsic: ApplyExtrinsic;
    /**
     * @description Returns the item as a [[Finalization]]
     */
    readonly asFinalization: Finalization;
    /**
     * @description true when this is a ApplyExtrinsic
     */
    readonly isApplyExtrinsic: boolean;
    /**
     * @description true when this is a ApplyExtrinsic
     */
    readonly isFinalization: boolean;
}
/**
 * @name EventRecord_0_76
 * @description
 * A record for an [[Event]] (as specified by [[Metadata]]) with the specific [[Phase]] of
 * application.
 */
export declare class EventRecord_0_76 extends Struct {
    constructor(value: any);
    /**
     * @description The [[Event]] this record refers to
     */
    readonly event: Event;
    /**
     * @description The [[Phase]] where the event was generated
     */
    readonly phase: Phase;
    /**
     * @description The [[Hash]] topics for this event (empty, compat)
     */
    readonly topics: Vector<Hash>;
}
/**
 * @name EventRecord
 * @description
 * A record for an [[Event]] (as specified by [[Metadata]]) with the specific [[Phase]] of
 * application.
 */
export default class EventRecord extends Struct {
    constructor(value: any);
    static Fallback: typeof EventRecord_0_76;
    /**
     * @description The [[Event]] this record refers to
     */
    readonly event: Event;
    /**
     * @description The [[Phase]] where the event was generated
     */
    readonly phase: Phase;
    /**
     * @description The [[Hash]] topics for this event
     */
    readonly topics: Vector<Hash>;
}
